// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: pb/observe.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request message for the Observe RPC.
type ObserveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hypothesis    string                 `protobuf:"bytes,1,opt,name=hypothesis,proto3" json:"hypothesis,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObserveRequest) Reset() {
	*x = ObserveRequest{}
	mi := &file_pb_observe_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObserveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObserveRequest) ProtoMessage() {}

func (x *ObserveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_observe_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObserveRequest.ProtoReflect.Descriptor instead.
func (*ObserveRequest) Descriptor() ([]byte, []int) {
	return file_pb_observe_proto_rawDescGZIP(), []int{0}
}

func (x *ObserveRequest) GetHypothesis() string {
	if x != nil {
		return x.Hypothesis
	}
	return ""
}

// The response message for the Observe RPC.
type ObserveResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The original hypothesis from the request, to associate the quantitative correctly.
	Hypothesis    string  `protobuf:"bytes,1,opt,name=hypothesis,proto3" json:"hypothesis,omitempty"`
	Quantitative  float64 `protobuf:"fixed64,2,opt,name=quantitative,proto3" json:"quantitative,omitempty"`
	Qualitative   string  `protobuf:"bytes,3,opt,name=qualitative,proto3" json:"qualitative,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObserveResponse) Reset() {
	*x = ObserveResponse{}
	mi := &file_pb_observe_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObserveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObserveResponse) ProtoMessage() {}

func (x *ObserveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_observe_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObserveResponse.ProtoReflect.Descriptor instead.
func (*ObserveResponse) Descriptor() ([]byte, []int) {
	return file_pb_observe_proto_rawDescGZIP(), []int{1}
}

func (x *ObserveResponse) GetHypothesis() string {
	if x != nil {
		return x.Hypothesis
	}
	return ""
}

func (x *ObserveResponse) GetQuantitative() float64 {
	if x != nil {
		return x.Quantitative
	}
	return 0
}

func (x *ObserveResponse) GetQualitative() string {
	if x != nil {
		return x.Qualitative
	}
	return ""
}

var File_pb_observe_proto protoreflect.FileDescriptor

const file_pb_observe_proto_rawDesc = "" +
	"\n" +
	"\x10pb/observe.proto\x12\tworker.pb\"0\n" +
	"\x0eObserveRequest\x12\x1e\n" +
	"\n" +
	"hypothesis\x18\x01 \x01(\tR\n" +
	"hypothesis\"w\n" +
	"\x0fObserveResponse\x12\x1e\n" +
	"\n" +
	"hypothesis\x18\x01 \x01(\tR\n" +
	"hypothesis\x12\"\n" +
	"\fquantitative\x18\x02 \x01(\x01R\fquantitative\x12 \n" +
	"\vqualitative\x18\x03 \x01(\tR\vqualitative2M\n" +
	"\aObserve\x12B\n" +
	"\aobserve\x12\x19.worker.pb.ObserveRequest\x1a\x1a.worker.pb.ObserveResponse\"\x00B\x1dZ\x1borchestrator/internal/pb;pbb\x06proto3"

var (
	file_pb_observe_proto_rawDescOnce sync.Once
	file_pb_observe_proto_rawDescData []byte
)

func file_pb_observe_proto_rawDescGZIP() []byte {
	file_pb_observe_proto_rawDescOnce.Do(func() {
		file_pb_observe_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pb_observe_proto_rawDesc), len(file_pb_observe_proto_rawDesc)))
	})
	return file_pb_observe_proto_rawDescData
}

var file_pb_observe_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pb_observe_proto_goTypes = []any{
	(*ObserveRequest)(nil),  // 0: worker.pb.ObserveRequest
	(*ObserveResponse)(nil), // 1: worker.pb.ObserveResponse
}
var file_pb_observe_proto_depIdxs = []int32{
	0, // 0: worker.pb.Observe.observe:input_type -> worker.pb.ObserveRequest
	1, // 1: worker.pb.Observe.observe:output_type -> worker.pb.ObserveResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pb_observe_proto_init() }
func file_pb_observe_proto_init() {
	if File_pb_observe_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pb_observe_proto_rawDesc), len(file_pb_observe_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_observe_proto_goTypes,
		DependencyIndexes: file_pb_observe_proto_depIdxs,
		MessageInfos:      file_pb_observe_proto_msgTypes,
	}.Build()
	File_pb_observe_proto = out.File
	file_pb_observe_proto_goTypes = nil
	file_pb_observe_proto_depIdxs = nil
}
